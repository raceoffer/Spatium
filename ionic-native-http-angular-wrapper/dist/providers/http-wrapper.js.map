{"version":3,"sources":["../../src/providers/http-wrapper.ts"],"names":[],"mappings":"AAAA,OAAO,EAAA,UAAE,EAAU,MAAM,eAAA,CAAgB;AACzC,OAAO,EAAA,IAAE,EAAI,MAAM,oBAAA,CAAqB;AACxC,OAAO,EAAA,UAAE,EAAsC,WAAA,EAAa,WAAA,EAAY,MAAM,sBAAA,CAAuB;AACrG,OAAO,EAAA,iBAAE,EAAiB,MAAM,oBAAA,CAAqB;AACrD,OAAO,EAAA,UAAE,EAAU,MAAM,iBAAA,CAAkB;AAC3C,OAAO,MAAA,CAAO;AAGd;IAME,qBAAoB,MAAY,EAAU,OAAoB;QAA1C,WAAM,GAAN,MAAM,CAAM;QAAU,YAAO,GAAP,OAAO,CAAa;QALpD,sBAAiB,GAAmB,IAAI,CAAC;QAMjD,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC;QACzB,IAAI,CAAC,WAAW,GAAG,OAAO,CAAC;IAC7B,CAAC;IAEM,2CAAqB,GAA5B;QACE,EAAE,CAAC,CAAC,IAAI,CAAC,iBAAiB,KAAK,IAAI,CAAC,CAAC,CAAC;YACpC,IAAI,CAAC,iBAAiB,GAAG,iBAAiB,CAAC,qBAAqB,CAAC,KAAK,IAAI,IAAI,iBAAiB,CAAC,aAAa,CAAC,KAAK,IAAI,CAAC;QAC1H,CAAC;QACD,MAAM,CAAC,IAAI,CAAC,iBAAiB,CAAC;IAChC,CAAC;IAEM,yBAAG,GAAV,UAAW,GAAW,EAAE,OAA0B;QAAlD,iBAkBC;QAjBC,EAAE,CAAC,CAAC,IAAI,CAAC,qBAAqB,EAAE,CAAC,CAAC,CAAC;YACjC,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;YAC1B,MAAM,CAAC,UAAU,CAAC,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,wBAAwB,CAAC,OAAO,CAAC,EAAE,IAAI,CAAC,yBAAyB,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,UAAC,GAAQ;gBACpJ,MAAM,CAAC;oBACL,IAAI;wBACF,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;oBAC9B,CAAC;oBACD,IAAI,YAAC,mBAAmB;wBACtB,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC;oBAC7B,CAAC;oBACD,IAAI,EAAE,KAAI,CAAC,+BAA+B,CAAC,GAAG,EAAC,OAAO,CAAC;oBACvD,OAAO,EAAE,IAAI,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC;iBAClC,CAAA;YACH,CAAC,CAAC,CAAC;QACL,CAAC;QACD,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;QAC3B,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,0BAA0B,CAAC,OAAO,CAAC,CAAC,CAAC;IAC7E,CAAC;IAEM,0BAAI,GAAX,UAAY,GAAW,EAAE,IAAS,EAAE,OAA0B;QAA9D,iBAgBC;QAfC,EAAE,CAAC,CAAC,IAAI,CAAC,qBAAqB,EAAE,CAAC,CAAC,CAAC;YACjC,MAAM,CAAC,UAAU,CAAC,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,EAAE,IAAI,CAAC,yBAAyB,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,UAAC,GAAQ;gBACnH,MAAM,CAAC;oBACL,IAAI;wBACF,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;oBAC9B,CAAC;oBACD,IAAI,YAAC,mBAAmB;wBACtB,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC;oBAC7B,CAAC;oBACD,IAAI,EAAE,KAAI,CAAC,+BAA+B,CAAC,GAAG,EAAC,OAAO,CAAC;oBACvD,OAAO,EAAE,IAAI,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC;iBAClC,CAAA;YACH,CAAC,CAAC,CAAC;QACL,CAAC;QACD,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,EAAE,IAAI,CAAC,0BAA0B,CAAC,OAAO,CAAC,CAAC,CAAC;IACpF,CAAC;IAEM,yBAAG,GAAV,UAAW,GAAW,EAAE,IAAS,EAAE,OAA0B;QAA7D,iBAgBC;QAfC,EAAE,CAAC,CAAC,IAAI,CAAC,qBAAqB,EAAE,CAAC,CAAC,CAAC;YACjC,MAAM,CAAC,UAAU,CAAC,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,EAAE,IAAI,CAAC,yBAAyB,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,UAAC,GAAQ;gBAClH,MAAM,CAAC;oBACL,IAAI;wBACF,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;oBAC9B,CAAC;oBACD,IAAI,YAAC,mBAAmB;wBACtB,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC;oBAC7B,CAAC;oBACD,IAAI,EAAE,KAAI,CAAC,+BAA+B,CAAC,GAAG,EAAC,OAAO,CAAC;oBACvD,OAAO,EAAE,IAAI,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC;iBAClC,CAAA;YACH,CAAC,CAAC,CAAC;QACL,CAAC;QACD,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,EAAE,IAAI,CAAC,0BAA0B,CAAC,OAAO,CAAC,CAAC,CAAC;IACnF,CAAC;IAEM,4BAAM,GAAb,UAAc,GAAW,EAAE,OAA0B;QAArD,iBAgBC;QAfC,EAAE,CAAC,CAAC,IAAI,CAAC,qBAAqB,EAAE,CAAC,CAAC,CAAC;YACjC,MAAM,CAAC,UAAU,CAAC,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,GAAG,EAAE,IAAI,CAAC,wBAAwB,CAAC,OAAO,CAAC,EAAE,IAAI,CAAC,yBAAyB,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,UAAC,GAAQ;gBACvJ,MAAM,CAAC;oBACL,IAAI;wBACF,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;oBAC9B,CAAC;oBACD,IAAI,YAAC,mBAAmB;wBACtB,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC;oBAC7B,CAAC;oBACD,IAAI,EAAE,KAAI,CAAC,+BAA+B,CAAC,GAAG,EAAC,OAAO,CAAC;oBACvD,OAAO,EAAE,IAAI,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC;iBAClC,CAAA;YACH,CAAC,CAAC,CAAC;QACL,CAAC;QACD,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,GAAG,EAAE,IAAI,CAAC,0BAA0B,CAAC,OAAO,CAAC,CAAC,CAAC;IAChF,CAAC;IAEO,gDAA0B,GAAlC,UAAmC,OAAO;QACxC,IAAI,cAAc,GAAQ,OAAO,CAAC;QAClC,EAAE,CAAC,CAAC,OAAO,YAAY,WAAW,CAAC,CAAC,CAAC;YACnC,cAAc,GAAG,EAAE,CAAC;YACpB,cAAc,CAAC,OAAO,GAAG,OAAO,KAAK,SAAS,IAAI,OAAO,CAAC,OAAO,KAAK,SAAS,CAAC,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC;YACvG,cAAc,CAAC,MAAM,GAAG,OAAO,KAAK,SAAS,IAAI,OAAO,CAAC,MAAM,KAAK,SAAS,CAAC,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC;QACtG,CAAC;QACD,EAAE,CAAC,CAAC,cAAc,KAAK,SAAS,CAAC,CAAC,CAAC;YACjC,cAAc,GAAG,EAAE,CAAC;YACpB,cAAc,CAAC,YAAY,GAAG,MAAM,CAAC;QACvC,CAAC;QACD,EAAE,CAAC,CAAC,cAAc,CAAC,YAAY,KAAK,SAAS,CAAC,CAAC,CAAC;YAC9C,cAAc,CAAC,YAAY,GAAG,MAAM,CAAC;QACvC,CAAC;QACD,EAAE,CAAC,CAAC,cAAc,CAAC,OAAO,KAAK,SAAS,CAAC,CAAC,CAAC;YACzC,cAAc,CAAC,OAAO,GAAG,UAAU,CAAC;QACtC,CAAC;QACD,MAAM,CAAC,cAAc,CAAC;IACxB,CAAC;IAEO,+CAAyB,GAAjC,UAAkC,OAAO;QACvC,IAAI,OAAO,GAAwB,OAAO,KAAK,SAAS,IAAI,OAAO,CAAC,OAAO,KAAK,SAAS,CAAC,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC;QACjH,EAAE,CAAC,CAAC,OAAO,YAAY,OAAO,CAAC,CAAC,CAAC;YAC/B,IAAI,YAAU,GAAQ,EAAE,CAAC;YACzB,OAAO,CAAC,OAAO,CAAC,UAAU,KAAK,EAAE,IAAI;gBACnC,YAAU,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,GAAG,KAAK,CAAC,QAAQ,EAAE,CAAC;YACjD,CAAC,CAAC,CAAC;YACH,OAAO,GAAG,YAAU,CAAC;QACvB,CAAC;QACD,MAAM,CAAC,OAAO,CAAC;IACjB,CAAC;IAEO,8CAAwB,GAAhC,UAAiC,OAAO;QACtC,MAAM,CAAC,OAAO,KAAK,SAAS,IAAI,OAAO,CAAC,MAAM,KAAK,SAAS,CAAC,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC;IACrF,CAAC;IAEO,qDAA+B,GAAvC,UAAwC,GAAG,EAAE,OAAO;QAClD,EAAE,CAAA,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;YACZ,EAAE,CAAC,CAAC,OAAO,KAAK,SAAS,IAAI,OAAO,CAAC,YAAY,KAAK,SAAS,IAAI,OAAO,CAAC,YAAY,KAAK,MAAM,CAAC,CAAC,CAAC;gBACnG,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAC9B,CAAC;YACD,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC;QAClB,CAAC;QACD,MAAM,CAAC,IAAI,CAAC;IACd,CAAC;IAED;;;;;;OAMG;IACI,6BAAO,GAAd,UAAe,GAAW,EAAE,OAAyB,EAAE,IAAa;QAClE,EAAE,CAAC,CAAC,IAAI,CAAC,qBAAqB,EAAE,CAAC,CAAC,CAAC;YACjC,IAAI,OAAO,GAAwB,OAAO,CAAC,OAAO,CAAC;YACnD,EAAE,CAAC,CAAC,OAAO,YAAY,OAAO,CAAC,CAAC,CAAC;gBAC/B,IAAI,YAAU,GAAQ,EAAE,CAAC;gBACzB,OAAO,CAAC,OAAO,CAAC,UAAU,KAAK,EAAE,IAAI;oBACnC,YAAU,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,GAAG,KAAK,CAAC,QAAQ,EAAE,CAAC;gBACjD,CAAC,CAAC,CAAC;gBACH,OAAO,GAAG,YAAU,CAAC;YACvB,CAAC;YACD,MAAM,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC;gBACvB,KAAK,KAAK;oBACR,EAAE,CAAC,CAAC,IAAI,IAAI,IAAI,CAAC,CAAC,CAAC;wBACjB,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC;oBACxB,CAAC;oBACD,MAAM,CAAC,UAAU,CAAC,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,UAAC,GAAQ;wBAClF,MAAM,CAAC;4BACL,IAAI;gCACF,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;4BAC9B,CAAC;4BACD,IAAI,YAAC,mBAAmB;gCACtB,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC;4BAC7B,CAAC;4BACD,IAAI,EAAE,GAAG,CAAC,IAAI;4BACd,OAAO,EAAE,IAAI,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC;yBAClC,CAAA;oBACH,CAAC,CAAC,CAAC;gBACL,KAAK,MAAM;oBACT,MAAM,CAAC,UAAU,CAAC,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,UAAC,GAAQ;wBACnF,MAAM,CAAC;4BACL,IAAI;gCACF,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;4BAC9B,CAAC;4BACD,IAAI,YAAC,mBAAmB;gCACtB,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC;4BAC7B,CAAC;4BACD,IAAI,EAAE,GAAG,CAAC,IAAI;4BACd,OAAO,EAAE,IAAI,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC;yBAClC,CAAA;oBACH,CAAC,CAAC,CAAC;gBACL,KAAK,KAAK;oBACR,EAAE,CAAC,CAAC,IAAI,IAAI,IAAI,CAAC,CAAC,CAAC;wBACjB,IAAI,GAAG,OAAO,CAAC,MAAM,IAAI,IAAI,CAAC,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC;oBACtD,CAAC;oBACD,MAAM,CAAC,UAAU,CAAC,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,UAAC,GAAQ;wBAClF,MAAM,CAAC;4BACL,IAAI;gCACF,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;4BAC9B,CAAC;4BACD,IAAI,YAAC,mBAAmB;gCACtB,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC;4BAC7B,CAAC;4BACD,IAAI,EAAE,GAAG,CAAC,IAAI;4BACd,OAAO,EAAE,IAAI,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC;yBAClC,CAAA;oBACH,CAAC,CAAC,CAAC;gBACL,KAAK,QAAQ;oBACX,MAAM,CAAC,UAAU,CAAC,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,GAAG,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,UAAC,GAAQ;wBACrF,MAAM,CAAC;4BACL,IAAI;gCACF,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;4BAC9B,CAAC;4BACD,IAAI,YAAC,mBAAmB;gCACtB,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC;4BAC7B,CAAC;4BACD,IAAI,EAAE,GAAG,CAAC,IAAI;4BACd,OAAO,EAAE,IAAI,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC;yBAClC,CAAA;oBACH,CAAC,CAAC,CAAC;gBACL;oBACE,MAAM,0BAA0B,CAAC;YACrC,CAAC;QACH,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,sCAAsC;YACtC,IAAI,eAAe,GAAG,OAAO,CAAC,KAAK,CAAC;gBAClC,KAAK,EAAE,GAAG;aACX,CAAC,CAAC;YACH,EAAE,CAAC,CAAC,OAAO,CAAC,OAAO,KAAK,SAAS,CAAC,CAAC,CAAC;gBAClC,eAAe,GAAG,OAAO,CAAC,KAAK,CAAC;oBAC9B,SAAS,EAAE,IAAI,WAAW,EAAE;iBAC7B,CAAC,CAAC;YACL,CAAC;YACD,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;gBACT,eAAe,GAAG,eAAe,CAAC,KAAK,CAAC;oBACtC,MAAM,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC;iBAC7B,CAAC,CAAC;YACL,CAAC;YACD,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,eAAe,CAAC,CAAC;QACnD,CAAC;IACH,CAAC;IACI,sBAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,UAAU,EAAE;KACnB,CAAC;IACF,kBAAkB;IACX,0BAAc,GAAmE,cAAM,OAAA;QAC9F,EAAC,IAAI,EAAE,IAAI,GAAG;QACd,EAAC,IAAI,EAAE,UAAU,GAAG;KACnB,EAH6F,CAG7F,CAAC;IACF,kBAAC;CAnPD,AAmPC,IAAA;SAnPY,WAAW","file":"http-wrapper.js","sourceRoot":"","sourcesContent":["import {Injectable} from '@angular/core';\nimport {HTTP} from '@ionic-native/http';\nimport {HttpClient, HttpClient as angularHttp, HttpHeaders, HttpRequest} from \"@angular/common/http\";\nimport {checkAvailability} from '@ionic-native/core';\nimport {Observable} from \"rxjs/Observable\";\nimport \"rxjs\";\n\n\nexport class HttpWrapper {\n  protected nativeIsAvailable: boolean | null = null;\n\n  public nativeHttp: HTTP;\n  public angularHttp: HttpClient;\n\n  constructor(private native: HTTP, private angular: angularHttp) {\n    this.nativeHttp = native;\n    this.angularHttp = angular;\n  }\n\n  public isNativeHttpAvailable() {\n    if (this.nativeIsAvailable === null) {\n      this.nativeIsAvailable = checkAvailability('cordova.plugin.http') === true || checkAvailability('cordovaHTTP') === true;\n    }\n    return this.nativeIsAvailable;\n  }\n\n  public get(url: string, options?: HttpRequest<any>): Observable<any> {\n    if (this.isNativeHttpAvailable()) {\n      console.log('native get');\n      return Observable.fromPromise(this.nativeHttp.get(url, this.parseParamsForNativeHttp(options), this.parseHeadersForNativeHttp(options))).map((res: any) => {\n        return {\n          json() {\n            return JSON.parse(res.data);\n          },\n          text(ignoredEncodingHint) {\n            return res.data.toString();\n          },\n          body: this.parseBodyFromNativeHttpResponse(res,options),\n          headers: new Headers(res.headers)\n        }\n      });\n    }\n    console.log('angular get');\n    return this.angularHttp.get(url, this.parseOptionsForAngularHttp(options));\n  }\n\n  public post(url: string, body: any, options?: HttpRequest<any>): Observable<any> {\n    if (this.isNativeHttpAvailable()) {\n      return Observable.fromPromise(this.nativeHttp.post(url, body, this.parseHeadersForNativeHttp(options))).map((res: any) => {\n        return {\n          json() {\n            return JSON.parse(res.data);\n          },\n          text(ignoredEncodingHint) {\n            return res.data.toString();\n          },\n          body: this.parseBodyFromNativeHttpResponse(res,options),\n          headers: new Headers(res.headers)\n        }\n      });\n    }\n    return this.angularHttp.post(url, body, this.parseOptionsForAngularHttp(options));\n  }\n\n  public put(url: string, body: any, options?: HttpRequest<any>): Observable<any> {\n    if (this.isNativeHttpAvailable()) {\n      return Observable.fromPromise(this.nativeHttp.put(url, body, this.parseHeadersForNativeHttp(options))).map((res: any) => {\n        return {\n          json() {\n            return JSON.parse(res.data);\n          },\n          text(ignoredEncodingHint) {\n            return res.data.toString();\n          },\n          body: this.parseBodyFromNativeHttpResponse(res,options),\n          headers: new Headers(res.headers)\n        }\n      });\n    }\n    return this.angularHttp.put(url, body, this.parseOptionsForAngularHttp(options));\n  }\n\n  public delete(url: string, options?: HttpRequest<any>): Observable<any> {\n    if (this.isNativeHttpAvailable()) {\n      return Observable.fromPromise(this.nativeHttp.delete(url, this.parseParamsForNativeHttp(options), this.parseHeadersForNativeHttp(options))).map((res: any) => {\n        return {\n          json() {\n            return JSON.parse(res.data);\n          },\n          text(ignoredEncodingHint) {\n            return res.data.toString();\n          },\n          body: this.parseBodyFromNativeHttpResponse(res,options),\n          headers: new Headers(res.headers)\n        }\n      });\n    }\n    return this.angularHttp.delete(url, this.parseOptionsForAngularHttp(options));\n  }\n\n  private parseOptionsForAngularHttp(options) {\n    let angularOptions: any = options;\n    if (options instanceof HttpRequest) {\n      angularOptions = {};\n      angularOptions.headers = options !== undefined && options.headers !== undefined ? options.headers : {};\n      angularOptions.params = options !== undefined && options.params !== undefined ? options.params : {};\n    }\n    if (angularOptions === undefined) {\n      angularOptions = {};\n      angularOptions.responseType = 'json';\n    }\n    if (angularOptions.responseType === undefined) {\n      angularOptions.responseType = 'json';\n    }\n    if (angularOptions.observe === undefined) {\n      angularOptions.observe = 'response';\n    }\n    return angularOptions;\n  }\n\n  private parseHeadersForNativeHttp(options) {\n    let headers: Headers | {} | null = options !== undefined && options.headers !== undefined ? options.headers : {};\n    if (headers instanceof Headers) {\n      let newHeaders: any = {};\n      headers.forEach(function (value, name) {\n        newHeaders[name.toString()] = value.toString();\n      });\n      headers = newHeaders;\n    }\n    return headers;\n  }\n\n  private parseParamsForNativeHttp(options) {\n    return options !== undefined && options.params !== undefined ? options.params : {};\n  }\n\n  private parseBodyFromNativeHttpResponse(res, options) {\n    if(res.data) {\n      if (options === undefined || options.responseType === undefined || options.responseType === 'json') {\n        return JSON.parse(res.data);\n      }\n      return res.data;\n    }\n    return null;\n  }\n\n  /**\n   * @deprecated, use GET|PUT|POST|DELETE methods instead\n   * @param {string} url\n   * @param {HttpRequest} options\n   * @param {Object} data\n   * @returns {Observable}\n   */\n  public request(url: string, options: HttpRequest<any>, data?: Object): Observable<any> {\n    if (this.isNativeHttpAvailable()) {\n      let headers: Headers | {} | null = options.headers;\n      if (headers instanceof Headers) {\n        let newHeaders: any = {};\n        headers.forEach(function (value, name) {\n          newHeaders[name.toString()] = value.toString();\n        });\n        headers = newHeaders;\n      }\n      switch (options.method) {\n        case 'GET':\n          if (data == null) {\n            data = options.params;\n          }\n          return Observable.fromPromise(this.nativeHttp.get(url, data, headers)).map((res: any) => {\n            return {\n              json() {\n                return JSON.parse(res.data);\n              },\n              text(ignoredEncodingHint) {\n                return res.data.toString();\n              },\n              body: res.data,\n              headers: new Headers(res.headers)\n            }\n          });\n        case 'POST':\n          return Observable.fromPromise(this.nativeHttp.post(url, data, headers)).map((res: any) => {\n            return {\n              json() {\n                return JSON.parse(res.data);\n              },\n              text(ignoredEncodingHint) {\n                return res.data.toString();\n              },\n              body: res.data,\n              headers: new Headers(res.headers)\n            }\n          });\n        case 'PUT':\n          if (data == null) {\n            data = options.params != null ? options.params : {};\n          }\n          return Observable.fromPromise(this.nativeHttp.put(url, data, headers)).map((res: any) => {\n            return {\n              json() {\n                return JSON.parse(res.data);\n              },\n              text(ignoredEncodingHint) {\n                return res.data.toString();\n              },\n              body: res.data,\n              headers: new Headers(res.headers)\n            }\n          });\n        case 'DELETE':\n          return Observable.fromPromise(this.nativeHttp.delete(url, data, headers)).map((res: any) => {\n            return {\n              json() {\n                return JSON.parse(res.data);\n              },\n              text(ignoredEncodingHint) {\n                return res.data.toString();\n              },\n              body: res.data,\n              headers: new Headers(res.headers)\n            }\n          });\n        default:\n          throw 'Request Method not found';\n      }\n    } else {\n      //Make an @angular/common/http request\n      let modifiedOptions = options.clone({\n        'url': url\n      });\n      if (options.headers === undefined) {\n        modifiedOptions = options.clone({\n          \"headers\": new HttpHeaders()\n        });\n      }\n      if (data) {\n        modifiedOptions = modifiedOptions.clone({\n          \"body\": JSON.stringify(data)\n        });\n      }\n      return this.angularHttp.request(modifiedOptions);\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: HTTP, },\n{type: HttpClient, },\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}